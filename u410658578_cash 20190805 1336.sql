--
-- Script was generated by Devart dbForge Studio 2019 for MySQL, Version 8.1.45.0
-- Product home page: http://www.devart.com/dbforge/mysql/studio
-- Script date 2019. 08. 05. 13:36:07
-- Server version: 5.5.5-10.3.16-MariaDB
-- Client version: 4.1
--

-- 
-- Disable foreign keys
-- 
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;

-- 
-- Set SQL mode
-- 
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;

-- 
-- Set character set the client will use to send SQL statements to the server
--
SET NAMES 'utf8';

DROP DATABASE IF EXISTS u410658578_cash;

CREATE DATABASE u410658578_cash
	CHARACTER SET utf8
	COLLATE utf8_hungarian_ci;

--
-- Set default database
--
USE u410658578_cash;

--
-- Create table `countries`
--
CREATE TABLE countries (
  id SMALLINT(6) UNSIGNED NOT NULL AUTO_INCREMENT,
  Name VARCHAR(50) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 3,
AVG_ROW_LENGTH = 8192,
CHARACTER SET utf8,
COLLATE utf8_hungarian_ci;

--
-- Create index `Name` on table `countries`
--
ALTER TABLE countries 
  ADD UNIQUE INDEX Name(Name);

--
-- Create table `town`
--
CREATE TABLE town (
  id SMALLINT(6) UNSIGNED NOT NULL AUTO_INCREMENT,
  Name VARCHAR(50) DEFAULT NULL,
  Country_Id SMALLINT(6) UNSIGNED NOT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 3,
AVG_ROW_LENGTH = 8192,
CHARACTER SET utf8,
COLLATE utf8_hungarian_ci;

--
-- Create foreign key
--
ALTER TABLE town 
  ADD CONSTRAINT FK_town_Country_Id FOREIGN KEY (Country_Id)
    REFERENCES countries(id) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Create table `companies`
--
CREATE TABLE companies (
  company_ID INT(11) NOT NULL AUTO_INCREMENT,
  company_name VARCHAR(255) NOT NULL,
  email VARCHAR(255) NOT NULL,
  country VARCHAR(255) NOT NULL,
  rating DOUBLE NOT NULL,
  town_Id SMALLINT(6) UNSIGNED NOT NULL,
  PRIMARY KEY (company_ID)
)
ENGINE = INNODB,
AUTO_INCREMENT = 5,
AVG_ROW_LENGTH = 4096,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create index `companies_email_unique` on table `companies`
--
ALTER TABLE companies 
  ADD UNIQUE INDEX companies_email_unique(email);

--
-- Create foreign key
--
ALTER TABLE companies 
  ADD CONSTRAINT FK_companies_town_Id FOREIGN KEY (town_Id)
    REFERENCES town(id) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Create table `accounts`
--
CREATE TABLE accounts (
  account_ID INT(11) NOT NULL AUTO_INCREMENT,
  password VARCHAR(255) DEFAULT NULL,
  email VARCHAR(100) DEFAULT NULL,
  contact_name VARCHAR(255) DEFAULT NULL,
  company_ID INT(11) DEFAULT NULL,
  at_created TIMESTAMP NOT NULL DEFAULT current_timestamp() ON UPDATE CURRENT_TIMESTAMP,
  at_modified TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  activation_code VARCHAR(50) DEFAULT '',
  pwd_reset_token VARCHAR(255) DEFAULT NULL,
  at_reseted TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  PRIMARY KEY (account_ID)
)
ENGINE = INNODB,
AUTO_INCREMENT = 242,
AVG_ROW_LENGTH = 3276,
CHARACTER SET utf8,
COLLATE utf8_general_ci;

--
-- Create index `UK_accounts_company_ID` on table `accounts`
--
ALTER TABLE accounts 
  ADD UNIQUE INDEX UK_accounts_company_ID(company_ID);

--
-- Create foreign key
--
ALTER TABLE accounts 
  ADD CONSTRAINT FK_accounts_company_ID FOREIGN KEY (company_ID)
    REFERENCES companies(company_ID) ON DELETE CASCADE ON UPDATE CASCADE;

DELIMITER $$

--
-- Create procedure `RESET_PWD`
--
CREATE DEFINER = 'u410658578_cash'@'88.87.233.59'
PROCEDURE RESET_PWD(IN in_pwd VARCHAR(255), IN in_email VARCHAR(100))
BEGIN
UPDATE accounts
SET password = in_pwd,
    pwd_reset_token = 'reseted',
    at_reseted = CURTIME()
WHERE email = in_email;
END
$$

--
-- Create procedure `REG_USER`
--
CREATE DEFINER = 'u410658578_cash'@'88.87.233.59'
PROCEDURE REG_USER(IN in_email VARCHAR(50), IN in_pwd VARCHAR(255), IN in_code VARCHAR(50))
BEGIN
INSERT INTO u410658578_cash.accounts (email, password, activation_code)
  VALUES (in_email, in_pwd, in_code);
END
$$

--
-- Create procedure `ACT_CODE`
--
CREATE DEFINER = 'u410658578_cash'@'88.87.233.59'
PROCEDURE ACT_CODE(IN in_email VARCHAR(50))
BEGIN
SELECT
  accounts.activation_code
FROM accounts
WHERE email = in_email;
END
$$

DELIMITER ;

--
-- Create table `industries`
--
CREATE TABLE industries (
  id SMALLINT(6) UNSIGNED NOT NULL AUTO_INCREMENT,
  Name VARCHAR(50) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 4,
AVG_ROW_LENGTH = 5461,
CHARACTER SET utf8,
COLLATE utf8_hungarian_ci;

--
-- Create table `product_types`
--
CREATE TABLE product_types (
  product_type_ID INT(11) NOT NULL AUTO_INCREMENT,
  product_type_name VARCHAR(255) DEFAULT NULL,
  industry_id SMALLINT(6) UNSIGNED NOT NULL,
  PRIMARY KEY (product_type_ID)
)
ENGINE = INNODB,
AUTO_INCREMENT = 6,
AVG_ROW_LENGTH = 3276,
CHARACTER SET utf8,
COLLATE utf8_hungarian_ci;

--
-- Create foreign key
--
ALTER TABLE product_types 
  ADD CONSTRAINT FK_product_types_industry_id FOREIGN KEY (industry_id)
    REFERENCES industries(id) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Create table `products`
--
CREATE TABLE products (
  product_ID INT(11) NOT NULL AUTO_INCREMENT,
  product_name VARCHAR(255) NOT NULL,
  product_type_id INT(11) NOT NULL,
  information TEXT NOT NULL,
  company_id INT(11) NOT NULL,
  PRIMARY KEY (product_ID)
)
ENGINE = INNODB,
AUTO_INCREMENT = 11,
AVG_ROW_LENGTH = 4096,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create foreign key
--
ALTER TABLE products 
  ADD CONSTRAINT FK_products_company_id FOREIGN KEY (company_id)
    REFERENCES companies(company_ID) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Create foreign key
--
ALTER TABLE products 
  ADD CONSTRAINT FK_products_product_ID FOREIGN KEY (product_type_id)
    REFERENCES product_types(product_type_ID) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Create table `wishlist`
--
CREATE TABLE wishlist (
  UserId INT(11) NOT NULL,
  ProductId INT(11) NOT NULL
)
ENGINE = INNODB,
CHARACTER SET utf8,
COLLATE utf8_hungarian_ci;

--
-- Create foreign key
--
ALTER TABLE wishlist 
  ADD CONSTRAINT FK_WishList_ProductId FOREIGN KEY (ProductId)
    REFERENCES products(product_ID) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Create foreign key
--
ALTER TABLE wishlist 
  ADD CONSTRAINT FK_WishList_UserId FOREIGN KEY (UserId)
    REFERENCES accounts(account_ID) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Create table `rentals`
--
CREATE TABLE rentals (
  rental_ID INT(11) NOT NULL AUTO_INCREMENT,
  product_ID INT(11) NOT NULL,
  capacity INT(11) NOT NULL,
  start_date DATE NOT NULL,
  end_date DATE NOT NULL,
  PRIMARY KEY (rental_ID)
)
ENGINE = INNODB,
AUTO_INCREMENT = 5,
AVG_ROW_LENGTH = 4096,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create foreign key
--
ALTER TABLE rentals 
  ADD CONSTRAINT FK_rentals_product_id FOREIGN KEY (product_ID)
    REFERENCES products(product_ID) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Create table `not_available`
--
CREATE TABLE not_available (
  not_avaible_ID INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  product_ID INT(11) NOT NULL,
  start_date DATE NOT NULL,
  end_date DATE NOT NULL,
  booking_ID INT(11) NOT NULL,
  PRIMARY KEY (not_avaible_ID)
)
ENGINE = INNODB,
AUTO_INCREMENT = 10,
AVG_ROW_LENGTH = 2730,
CHARACTER SET utf8,
COLLATE utf8_general_ci;

--
-- Create foreign key
--
ALTER TABLE not_available 
  ADD CONSTRAINT FK_not_available_product_ID FOREIGN KEY (product_ID)
    REFERENCES products(product_ID) ON DELETE CASCADE ON UPDATE CASCADE;

DELIMITER $$

--
-- Create procedure `GetAvailableResources`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE GetAvailableResources(IN IName VARCHAR(255), IN IStartDate DATE, IN IEndDate DATE, IN ICountry VARCHAR(255), IN ITown VARCHAR(255), IN IProductTypeID INT, IN IIndustryTypeID INT)
BEGIN
SELECT
  *
FROM products
  INNER JOIN companies
    ON products.company_id = companies.company_ID
  INNER JOIN town
    ON town.id = companies.town_Id
  INNER JOIN countries
    ON town.Country_Id = countries.id
  INNER JOIN product_types
    ON product_types.product_type_ID = products.product_type_id
  INNER JOIN industries
    ON product_types.industry_id = industries.id
WHERE (CASE WHEN IName <> '' THEN products.product_name LIKE '%' + IName + '%' ELSE TRUE END)
AND (CASE WHEN ITown <> '' THEN town.Name = ITown ELSE (CASE WHEN ICountry <> '' THEN countries.Name = ICountry ELSE TRUE END) END)
AND (CASE WHEN IProductTypeID <> 0 THEN products.product_type_id = IProductTypeID ELSE (CASE WHEN IIndustryTypeID <> 0 THEN industries.id = IIndustryTypeID ELSE TRUE END) END)
AND (CASE WHEN (IStartDate <> '' AND
    IEndDate <> '') THEN (products.product_id NOT IN (SELECT
          products.product_id
        FROM not_available
          INNER JOIN products
            ON products.product_id = not_available.product_id
          INNER JOIN companies
            ON products.company_id = companies.company_ID
          INNER JOIN town
            ON town.id = companies.town_Id
        WHERE (CASE WHEN IName <> '' THEN products.product_name LIKE '%' + IName + '%' ELSE TRUE END)
        AND not_available.product_id = products.product_id
        AND IStartDate <= not_available.end_date
        AND IEndDate >= not_available.start_date
        AND (CASE WHEN ITown <> '' THEN town.Name = ITown ELSE (CASE WHEN ICountry <> '' THEN countries.Name = ICountry ELSE TRUE END) END)
        AND (CASE WHEN IProductTypeID <> 0 THEN products.product_type_id = IProductTypeID ELSE (CASE WHEN IIndustryTypeID <> 0 THEN industries.Name = IIndustryTypeID ELSE TRUE END) END))) ELSE TRUE END);
END
$$

DELIMITER ;

-- 
-- Dumping data for table countries
--
INSERT INTO countries VALUES
(1, 'Deutschland'),
(2, 'Ungarn');

-- 
-- Dumping data for table industries
--
INSERT INTO industries VALUES
(1, 'Office'),
(2, 'Heavy industry'),
(3, 'Building industry');

-- 
-- Dumping data for table town
--
INSERT INTO town VALUES
(1, 'Nünberg', 1),
(2, 'Győr', 2);

-- 
-- Dumping data for table product_types
--
INSERT INTO product_types VALUES
(1, 'Emelőgép', 3),
(2, 'Földmunkagép', 3),
(3, 'CNC', 2),
(4, 'Toronydaru', 3),
(5, '3D nyomtató', 1);

-- 
-- Dumping data for table companies
--
INSERT INTO companies VALUES
(1, 'Firma_01', 'firma01@firma.de', 'Deutschland', 4.3, 1),
(2, 'Firma_02', 'firma02@firma.de', 'Ungarn', 4.6, 2),
(3, 'Firma_03', 'firma03@firma.de', 'Deutschland', 4.8, 1),
(4, 'Firma_04', 'firma04@firma.de', 'Deutschland', 4.7, 1);

-- 
-- Dumping data for table accounts
--
INSERT INTO accounts VALUES
(1, '$2y$10$SfhYIDtn.iOuCW7zfoFLuuZHX6lja4lF4XA4JqNmpiH/.P3zB8JCa', 'ASD1999@gmail.com', '', NULL, '2019-07-18 12:53:59', '2019-07-18 12:53:59', 'asd', 'reseted', '2019-07-18 00:00:00'),
(17, '$2y$10$O9dpSw2XuipC3JbwxiJWi.IrU6BI5ZXLaw5AIBcr9lgTy8luzH/2.', 'fr@gmail.com', '', NULL, '2019-07-18 12:54:05', '2019-07-18 12:54:05', 'activated', 'reseted', '2019-07-18 00:00:00'),
(32, '$2y$10$M.otl1IyW01p6oHpwwew8.JRysgnXXho6gectNVO30tswQvq8U/9e', 'fr-demo@fr-demo.xyz\r\n', '', NULL, '2019-07-18 12:54:18', '2019-07-18 12:54:18', 'activated', 'reseted', '2019-07-18 00:00:00'),
(237, '$2y$10$4FQBmcMyV6XCz5i6PBEwOuq6TXT1wJDI/XHKxSA1ZXnyvoIMc2PP2', 'marcelion1999@gmail.com', NULL, NULL, '2019-07-20 08:19:37', '2019-07-20 08:19:37', 'activated', '5d32ce9925c42', '2019-07-18 09:32:20'),
(239, '$2y$10$.W0HIhjuBJdEicl3SaO/y.O/f.zqmK3gZ9PlqmjrGN0rrNCUJxe4a', 'marcelion1991@gmail.com', NULL, NULL, '2019-07-19 11:09:36', '2019-07-19 11:09:36', 'activated', NULL, '0000-00-00 00:00:00'),
(240, '$2y$10$TrVXZ9IeCdUXYnq9ExwD6eU9xLPclYKBPxp5yxMFW9GgrMMWfSYru', 'frobi73@gmail.com', NULL, NULL, '2019-07-28 10:36:54', '2019-07-28 10:36:54', 'activated', NULL, '0000-00-00 00:00:00'),
(241, '$2y$10$e8nIajnMZlfgFbDMJHz5mu68atdOJkE6jYm4WLxyOjYNyQGbrDJqm', 'K@K.K', NULL, NULL, '2019-07-29 13:46:11', '2019-07-29 13:46:11', 'activated', NULL, '0000-00-00 00:00:00');

-- 
-- Dumping data for table products
--
INSERT INTO products VALUES
(1, '3D Drucker', 5, '', 1),
(2, '3D Messanlage', 5, '', 2),
(3, '3D Drucker', 5, '', 3),
(4, '3D Drucker', 5, '', 4),
(5, 'Emelő', 1, '', 1),
(6, 'Emelő példa', 1, '', 2),
(7, 'Emelőgép', 1, '', 3),
(8, 'CNC példa', 3, '', 1),
(9, 'példa CNC', 3, '', 3),
(10, 'példaértékű CNC', 3, '', 2);

-- 
-- Dumping data for table wishlist
--
-- Table u410658578_cash.wishlist does not contain any data (it is empty)

-- 
-- Dumping data for table rentals
--
INSERT INTO rentals VALUES
(1, 1, 40, '2019-06-17', '2019-06-21'),
(2, 2, 80, '2019-06-17', '2019-06-21'),
(3, 3, 120, '2019-06-17', '2019-06-21'),
(4, 4, 160, '2019-06-17', '2019-06-21');

-- 
-- Dumping data for table not_available
--
INSERT INTO not_available VALUES
(1, 1, '2019-07-04', '2019-07-05', 101),
(2, 2, '2019-07-08', '2019-07-14', 102),
(3, 3, '2019-07-22', '2019-07-23', 103),
(4, 4, '2019-08-04', '2019-08-08', 104),
(5, 1, '2019-08-12', '2019-08-17', 105),
(6, 2, '2019-08-19', '2019-08-24', 106),
(7, 8, '2019-08-14', '2019-08-17', 107),
(8, 9, '2019-08-16', '2019-08-20', 108),
(9, 6, '2019-08-15', '2019-08-22', 0);

-- 
-- Restore previous SQL mode
-- 
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;

-- 
-- Enable foreign keys
-- 
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;